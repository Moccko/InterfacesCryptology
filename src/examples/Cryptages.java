/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
package examples;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.BufferedReader;
import java.io.IOException;
import java.math.BigInteger;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;

public class Cryptages extends javax.swing.JFrame {
    
    private HashMap<Character, BigInteger> cypher;

    /**
     * Creates new form ContactEditor
     */
    public Cryptages() {
        initComponents();
        cypher = new HashMap<Character, BigInteger>();
    }
    
    String normalize(String str) {
        return str.replaceAll("\\s+", "").toLowerCase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        texteACrypter = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cleCaesar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        crypterCaesar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        texteCrypteCaesar = new javax.swing.JTextArea();
        decrypteCaesar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        texteDecrypteCaesar = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        crypterVigenere = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        texteCrypteVigenere = new javax.swing.JTextArea();
        decrypterVigenere = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        texteDecrypteVigenere = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cleVigenere = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        crypterRSA = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texteCrypteRSA = new javax.swing.JTextArea();
        decrypterRSA = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        texteDecrypteRSA = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        generationCleRsa = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        publicKeyRSA = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        alice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        generateAlice = new javax.swing.JButton();
        copyDFKey = new javax.swing.JButton();
        generateDFKey = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        DFKey = new javax.swing.JTextArea();
        bob = new javax.swing.JTextField();
        labelB = new javax.swing.JLabel();
        generateBob = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cryptages");
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        texteACrypter.setAlignmentX(0.0F);
        texteACrypter.setName("texteACrypter"); // NOI18N
        texteACrypter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texteACrypterActionPerformed(evt);
            }
        });

        jLabel3.setText("Saisissez votre message :");

        cleCaesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleCaesarActionPerformed(evt);
            }
        });

        jLabel2.setText("Saisissez votre clé (int) :");

        crypterCaesar.setText("Crypter (César)");
        crypterCaesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crypterCaesarActionPerformed(evt);
            }
        });

        jLabel5.setText("Message crypté (César)");

        texteCrypteCaesar.setColumns(20);
        texteCrypteCaesar.setRows(5);
        jScrollPane5.setViewportView(texteCrypteCaesar);

        decrypteCaesar.setText("Décrypter (César)");
        decrypteCaesar.setToolTipText("");
        decrypteCaesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypteCaesarActionPerformed(evt);
            }
        });

        jLabel6.setText("Message décrypté (César)");

        texteDecrypteCaesar.setEditable(false);
        texteDecrypteCaesar.setColumns(20);
        texteDecrypteCaesar.setRows(5);
        jScrollPane6.setViewportView(texteDecrypteCaesar);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel2)
            .add(jLabel5)
            .add(jLabel6)
            .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .add(cleCaesar)
            .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 201, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, crypterCaesar)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, decrypteCaesar)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cleCaesar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(crypterCaesar)
                .add(8, 8, 8)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(24, 24, 24)
                .add(decrypteCaesar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane6)
                .addContainerGap())
        );

        crypterVigenere.setText("Crypter (Vigenere)");
        crypterVigenere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crypterVigenereActionPerformed(evt);
            }
        });

        jLabel7.setText("Message crypté (Vigenere)");

        texteCrypteVigenere.setColumns(20);
        texteCrypteVigenere.setRows(5);
        jScrollPane2.setViewportView(texteCrypteVigenere);

        decrypterVigenere.setText("Décrypter (Vigenere)");
        decrypterVigenere.setToolTipText("");
        decrypterVigenere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypterVigenereActionPerformed(evt);
            }
        });

        jLabel8.setText("Message décrypté (Vigenere)");

        texteDecrypteVigenere.setEditable(false);
        texteDecrypteVigenere.setColumns(20);
        texteDecrypteVigenere.setRows(5);
        jScrollPane4.setViewportView(texteDecrypteVigenere);

        jLabel1.setText("Saisissez votre clé (string) :");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(cleVigenere)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, crypterVigenere)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, decrypterVigenere)))
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel7)
                    .add(jLabel8))
                .add(0, 24, Short.MAX_VALUE))
            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cleVigenere, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(crypterVigenere)
                .add(12, 12, 12)
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(decrypterVigenere)
                .add(18, 18, 18)
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        crypterRSA.setText("Crypter (RSA)");
        crypterRSA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crypterRSAActionPerformed(evt);
            }
        });

        jLabel9.setText("Message crypté (RSA)");

        texteCrypteRSA.setColumns(20);
        texteCrypteRSA.setRows(5);
        texteCrypteRSA.setName("texteCrypteRSA"); // NOI18N
        jScrollPane1.setViewportView(texteCrypteRSA);

        decrypterRSA.setText("Décrypter (RSA)");
        decrypterRSA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypterRSAActionPerformed(evt);
            }
        });

        jLabel10.setText("Message décrypté (RSA)");

        texteDecrypteRSA.setEditable(false);
        texteDecrypteRSA.setColumns(20);
        texteDecrypteRSA.setRows(5);
        jScrollPane3.setViewportView(texteDecrypteRSA);

        jButton1.setText("Afficher/éditer clés RSA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        generationCleRsa.setText("Générer vos clés RSA");
        generationCleRsa.setToolTipText("");
        generationCleRsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generationCleRsaActionPerformed(evt);
            }
        });

        publicKeyRSA.setColumns(20);
        publicKeyRSA.setLineWrap(true);
        publicKeyRSA.setRows(5);
        publicKeyRSA.setName("publicKeyRSA"); // NOI18N
        jScrollPane7.setViewportView(publicKeyRSA);

        jLabel4.setText("Entrez la clé publique pour le cryptage");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel10)
                            .add(jLabel9)
                            .add(jScrollPane7)
                            .add(jScrollPane3))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jScrollPane1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, generationCleRsa)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton1)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, crypterRSA)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, decrypterRSA))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(generationCleRsa)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(crypterRSA)
                .add(18, 18, 18)
                .add(jLabel9)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(decrypterRSA)
                .add(24, 24, 24)
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jLabel11.setText("Saisissez a");

        generateAlice.setText("Ou générer a");
        generateAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateAliceActionPerformed(evt);
            }
        });

        copyDFKey.setText("Copier");
        copyDFKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyDFKeyActionPerformed(evt);
            }
        });

        generateDFKey.setText("calculer Clé secrète");
        generateDFKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateDFKeyActionPerformed(evt);
            }
        });

        DFKey.setColumns(20);
        DFKey.setLineWrap(true);
        DFKey.setRows(5);
        DFKey.setName("texteCrypteRSA"); // NOI18N
        jScrollPane10.setViewportView(DFKey);

        bob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bobActionPerformed(evt);
            }
        });

        labelB.setText("Saisissez b :");

        generateBob.setText("Ou générer b");
        generateBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBobActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(generateBob)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(copyDFKey)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(bob)
                            .add(labelB)
                            .add(generateDFKey, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jScrollPane10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(generateAlice)
                    .add(jLabel11)
                    .add(alice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(alice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(generateAlice)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(labelB)
                .add(2, 2, 2)
                .add(bob, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(generateBob)
                .add(18, 18, 18)
                .add(generateDFKey)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(copyDFKey)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(texteACrypter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 315, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(texteACrypter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crypterVigenereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crypterVigenereActionPerformed
        String message = normalize(texteACrypter.getText());
        String key = Vigenere.makeKey(normalize(cleVigenere.getText()), message.length());
        String encryptedText = Vigenere.vigenereEncrypt(message, key);
        texteCrypteVigenere.setText(encryptedText);
    }//GEN-LAST:event_crypterVigenereActionPerformed

    private void texteACrypterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texteACrypterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texteACrypterActionPerformed

    private void crypterRSAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crypterRSAActionPerformed
        String encryptedText = RSA.RSAEncrypt(texteACrypter.getText(), publicKeyRSA.getText());
        texteCrypteRSA.setText(encryptedText);
    }//GEN-LAST:event_crypterRSAActionPerformed

    private void generationCleRsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generationCleRsaActionPerformed
        RSA.generateKeys(512);
        //RSA rsa = new RSA();
        // rsa.generateKeys(512);
    }//GEN-LAST:event_generationCleRsaActionPerformed

    private void decrypterRSAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypterRSAActionPerformed
        String decryptedText = RSA.RSADecrypt(texteCrypteRSA.getText());
        texteDecrypteRSA.setText(decryptedText);
    }//GEN-LAST:event_decrypterRSAActionPerformed

    private void decrypterVigenereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypterVigenereActionPerformed
        String message = normalize(texteCrypteVigenere.getText());
        String key = Vigenere.makeKey(normalize(cleVigenere.getText()), message.length());
        String decryptedText = Vigenere.vigenereDecrypt(message, key);
        texteDecrypteVigenere.setText(decryptedText);
    }//GEN-LAST:event_decrypterVigenereActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Path publicKeyFile = Paths.get("rsa.pub");
        Charset charset = Charset.forName("UTF-8");
        try {
            BufferedReader br = Files.newBufferedReader(publicKeyFile, charset);
            String publicKey = br.readLine();
            br.close();
            RSAKeys rsaKeys = new RSAKeys();
            rsaKeys.setPublicKey(publicKey);
            rsaKeys.show();
        } catch (IOException ioe) {
            System.err.println("Error " + ioe);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void decrypteCaesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypteCaesarActionPerformed
        int i = Integer.parseInt(cleCaesar.getText());
        String decryptedText = Caesar.caesarDecrypt(normalize(texteCrypteCaesar.getText()), i);
        texteDecrypteCaesar.setText(decryptedText);
    }//GEN-LAST:event_decrypteCaesarActionPerformed

    private void crypterCaesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crypterCaesarActionPerformed
        int i = Integer.parseInt(cleCaesar.getText());
        String encryptedText = Caesar.caesarEncrypt(normalize(texteACrypter.getText()), i);
        texteCrypteCaesar.setText(encryptedText);
    }//GEN-LAST:event_crypterCaesarActionPerformed

    private void cleCaesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleCaesarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cleCaesarActionPerformed

    private void bobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bobActionPerformed

    private void generateDFKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateDFKeyActionPerformed
        
        if (!alice.getText().isEmpty() || !bob.getText().isEmpty()) {
            DiffieHellman dh = new DiffieHellman(alice.getText(), bob.getText());
            DFKey.setText(dh.getSignature());
        } else {
            DFKey.setText("Mauvais arguments passés en paramètres");
        }
    }//GEN-LAST:event_generateDFKeyActionPerformed

    private void copyDFKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyDFKeyActionPerformed
        Toolkit toolKit = Toolkit.getDefaultToolkit();
        Clipboard cb = toolKit.getSystemClipboard();
        cb.setContents(new StringSelection(DFKey.getText()), null);
    }//GEN-LAST:event_copyDFKeyActionPerformed

    private void generateAliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateAliceActionPerformed
        alice.setText(DiffieHellman.generateNumber());
    }//GEN-LAST:event_generateAliceActionPerformed

    private void generateBobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBobActionPerformed
        bob.setText(DiffieHellman.generateNumber());
    }//GEN-LAST:event_generateBobActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx = 0; idx < installedLookAndFeels.length; idx++) {
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cryptages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cryptages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cryptages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cryptages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Cryptages().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DFKey;
    private javax.swing.JTextField alice;
    private javax.swing.JTextField bob;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cleCaesar;
    private javax.swing.JTextField cleVigenere;
    private javax.swing.JButton copyDFKey;
    private javax.swing.JButton crypterCaesar;
    private javax.swing.JButton crypterRSA;
    private javax.swing.JButton crypterVigenere;
    private javax.swing.JButton decrypteCaesar;
    private javax.swing.JButton decrypterRSA;
    private javax.swing.JButton decrypterVigenere;
    private javax.swing.JButton generateAlice;
    private javax.swing.JButton generateBob;
    private javax.swing.JButton generateDFKey;
    private javax.swing.JButton generationCleRsa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel labelB;
    private javax.swing.JTextArea publicKeyRSA;
    private javax.swing.JTextField texteACrypter;
    private javax.swing.JTextArea texteCrypteCaesar;
    private javax.swing.JTextArea texteCrypteRSA;
    private javax.swing.JTextArea texteCrypteVigenere;
    private javax.swing.JTextArea texteDecrypteCaesar;
    private javax.swing.JTextArea texteDecrypteRSA;
    private javax.swing.JTextArea texteDecrypteVigenere;
    // End of variables declaration//GEN-END:variables

}
